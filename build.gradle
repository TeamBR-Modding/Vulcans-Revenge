buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

// Repos
repositories {
    maven {
        name 'BR Repo'
        url "http://www.dyonovan.com/maven2/"
    }
    maven {
      // location of the maven that hosts JEI files
      name = "Progwml6 maven"
      url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
      // location of a maven mirror for JEI files, as a fallback
      name = "ModMaven"
      url = "modmaven.k-4u.nl"
    }
}

// Forces builds to always check for new versions
configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

// Team city build info
String build = ""
if (project.hasProperty("teamcity")) {
    build = "B" +"${project.ext['build.number']}"
}
if (build == null || build == '') {
    version = "${project.minecraft_version}-${project.mod_version}"
} else {
    version = "${project.minecraft_version}-${project.mod_version}-" + build
}

group = "com.pauljoda.vulcansrevenge" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "VulcansRevenge"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${project.minecraft_version}" + "-" + "${project.forge_version}"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "${project.MAPPINGS}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
  // compile against the JEI API but do not include it at runtime
  deobfProvided "mezz.jei:jei_${project.minecraft_version}:${project.JEI_version}:api"
  // at runtime, use the full JEI jar
  runtime "mezz.jei:jei_${project.minecraft_version}:${project.JEI_version}"

  compile group: "com.teambr.nucleus", name: "Nucleus", version: "1.12.2-" + "${project.nucleus_version}" +"-B+", classifier: "dev", changing: true
}

processResources {
    exclude '**/Thumbs.db'

    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Build info
configurations {
    deployerJars
}

task devJar(type: Jar, dependsOn: 'classes') {
    from(sourceSets.main.output) {
        include '**'
    }
    extension = 'jar'
    classifier = 'dev'
}

task javadocJar(type: Zip, dependsOn: javadoc) {
    from 'build/docs/javadoc'
    classifier = 'javadoc'
}

artifacts {
    archives devJar
    //archives javadocJar
}


uploadArchives {
    if (project.hasProperty('username') && project.hasProperty('password')) {
        repositories {
            mavenDeployer {
                configuration = configurations.deployerJars
                //repository(url: System.properties['URL']) {
                repository(url: "ftp://dyonovan.com/srv/http/maven2") {
                    authentication(userName: "${username}", password: "${password}")
                }

                pom {
                    groupId = project.group
                    version = project.version
                    artifactId = project.archivesBaseName

                    pom.project {
                        name project.archivesBaseName
                        packaging 'jar'
                        description 'Bookshelf'
                        url 'https://github.com/TeamBR-Modding/AssistedProgression'
                        scm {
                            url 'https://github.com/TeamBR-Modding/AssistedProgression'
                            connection 'scm:git:git@github.com/TeamBR-Modding/AssistedProgression.git'
                            developerConnection 'scm:git:git@github.com/TeamBR-Modding/AssistedProgression.git'
                        }
                        issueManagement {
                            system 'github'
                            url 'https://github.com/TeamBR-Modding/AssistedProgression/issues'
                        }
                        licenses {
                            license {
                                name 'Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License'
                                url 'http://creativecommons.org/licenses/by-nc-sa/4.0/'
                                distribution 'repo'
                            }
                        }
                        developers {
                            developer {
                                id 'Dyonovan'
                                name 'Dyonovan'
                                roles {
                                    role 'developer'
                                }
                            }
                            developer {
                                id 'pauljoda'
                                name 'pauljoda'
                                roles {
                                    role 'developer'
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
